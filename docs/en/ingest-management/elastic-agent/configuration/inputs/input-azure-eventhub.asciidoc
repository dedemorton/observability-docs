[[azure-eventhub-input]]
= Azure eventhub input

++++
<titleabbrev>Azure Event Hub</titleabbrev>
++++

Use the `azure-eventhub` input to read messages from Azure Event Hubs. The
`azure-eventhub` input implementation is based on the event processor host
(EPH). It is intended to be run across multiple processes and machines while
load balancing message consumers. For more information, see the
https://github.com/Azure/azure-event-hubs-go#event-processor-host[Event Processor Host readme]
and the
https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-event-processor-host[Event Processor Host]
documentation.

**Prerequisite:** State such as leases on partitions and checkpoints in the event
stream is shared between receivers using an Azure storage container. For this
reason, you must create a new storage account or use an existing one. 

Example configuration:

[source,yaml]
----
inputs:
  - type: azure-eventhub
    eventhub: "insights-operational-logs"
    consumer_group: "test"
    connection_string: "Endpoint=sb://....."
    storage_account: "azureeph"
    storage_account_key: "....."
    storage_account_container: ""
    resource_manager_endpoint: ""

----

[[input-azure-eventhub-configuration-settings]]
== Configuration settings

The `azure-eventhub` input supports the following settings. Many of these
settings have sensible defaults that allow you to run {agent} with minimal
configuration.

{also-see-common-input-settings}

[id="input-azure-eventhub-connection_string-setting"]
`connection_string`::
(string) The connection string required to communicate with Event Hubs. For
more information, see the Azure documentation about 
https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string[getting an Event Hubs connection string].
+
A Blob storage account is required to store, retrieve, and update the offset or
state of the event hub messages. This allows {agent} to restart at the correct
location after it has been stopped. 

****
**Reviewers:** Is this ^^ a required setting too?
****

[id="input-azure-eventhub-consumer_group-setting"]
`consumer_group`::
(string) The name of the consumer group. We recommend using a dedicated
consumer group for the Azure input. Reusing consumer groups among non-related
consumers can cause unexpected behavior and possibly lost events.

[id="input-azure-eventhub-eventhub-setting"]
`eventhub` (required)::
(string) The name of the event hub to read from.

[id="input-azure-eventhub-resource_manager_endpoint-setting"]
`resource_manager_endpoint`::
(string) The resource manager endpoint to use.
+
Default: the azure public environment
+
To use a different Azure environment, specify the endpoint. For example: 
+
* `https://management.chinacloudapi.cn/` for azure ChinaCloud
* `https://management.microsoftazure.de/` for azure GermanCloud
* `https://management.azure.com/` for azure PublicCloud
* `https://management.usgovcloudapi.net/` for azure USGovernmentCloud
+
You can also use this setting for a Hybrid Cloud model, where you define
your own endpoints.

[id="input-azure-eventhub-storage_account-setting"]
`storage_account` (required)::
(string) The name of the storage account.

[id="input-azure-eventhub-storage_account_container-setting"]
`storage_account_container`::
(string) The name of the storage account container to store the offset
information in.

[id="input-azure-eventhub-storage_account_key-setting"]
`storage_account_key` (required)::
(string) The storage account key. This key is used to authorize access to data
in your storage account.

//TODO: If we mark "required" in this topic, we need to do it for other inputs.
