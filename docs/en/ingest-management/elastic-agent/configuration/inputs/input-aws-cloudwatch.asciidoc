:input-type: aws-cloudwatch

[[aws-cloudwatch-input]]
= AWS CloudWatch input

++++
<titleabbrev>AWS CloudWatch</titleabbrev>
++++

beta[]

Use the `aws-cloudwatch` input to retrieve all logs from all log streams in a
specific log group. This input uses the `filterLogEvents` AWS API to list log
events from the specified log group. Amazon CloudWatch Logs can be used to store
log files from Amazon Elastic Compute Cloud (EC2), AWS CloudTrail, Route 53, and
other sources.

A log group is a group of log streams that share the same retention, monitoring,
and access control settings. You can define log groups and specify which streams
to put into each group. There is no limit on the number of log streams that can
belong to one log group.

A log stream is a sequence of log events that share the same source. Each
separate source of logs in CloudWatch Logs makes up a separate log stream.

["source","yaml",subs="attributes"]
----
inputs:
  - type: aws-cloudwatch
    log_group_arn: arn:aws:logs:us-east-1:428152502467:log-group:test:*
    scan_frequency: 1m
    credential_profile_name: elastic-beats
    start_position: beginning
----

The `aws-cloudwatch` input supports the following settings, grouped by category.
Many of these settings have sensible defaults that allow you to run {agent}
with minimal configuration.

<<input-aws-cloudwatch-commonly-used-settings>>::
Settings frequently changed for this input type.

<<input-aws-cloudwatch-performance-tuning-settings>>::
Settings that control timeouts and other behavior that affects performance.

<<input-aws-cloudwatch-data-parsing-settings>>::
Settings used to parse, filter, and transform data.

[[input-aws-cloudwatch-aws-credentials]]
== Required AWS credentials and permissions

To make AWS API calls, the `aws-cloudwatch` input requires AWS credentials.

//See <<aws-credentials-config,AWS credentials options>> for more details.

To access `aws-cloudwatch`, the IAM user must have the required permissions for:

----
logs:FilterLogEvents
----

[[input-aws-cloudwatch-commonly-used-settings]]
== Commonly used settings

Settings frequently changed for this input type.

[cols="2*<a"]
|===
| Settings | Description

// tag::log_group_arn-setting[]
|
[id="input-{input-type}-log_group_arn-setting"]
`log_group_arn`

| (string) ARN of the log group to collect logs from..
// end::log_group_arn-setting[]

// =============================================================================

// tag::log_group_name-setting[]
|
[id="input-{input-type}-log_group_name-setting"]
`log_group_name`

| (string) Name of the log group to collect logs from.

NOTE: `region_name` is required when `log_group_name` is set.

// end::log_group_name-setting[]

// =============================================================================

// tag::log_stream_prefix-setting[]
|
[id="input-{input-type}-log_stream_prefix-setting"]
`log_stream_prefix`

| (string) Filters the results to include only log events from log streams
that have names that strart with this prefix.
// end::log_stream_prefix-setting[]

// =============================================================================

// tag::log_streams-setting[]
|
[id="input-{input-type}-log_streams-setting"]
`log_streams`

| (list) A list of log stream names (strings) that {agent} collects log events
from.
// end::log_streams-setting[]

// =============================================================================

// tag::region_name-setting[]
|
[id="input-{input-type}-region_name-setting"]
`region_name`

| (string) Region that the specified log group belongs to.
// end::region_name-setting[]

// =============================================================================

// tag::scan_frequency-setting[]
|
[id="input-{input-type}-scan_frequency-setting"]
`scan_frequency`

| (string) How often {agent} checks for new log events from the specified log
group.

*Default:* `1m`

The default of `1m` means that {agent} sleeps for one minute before querying
new logs again.
// end::scan_frequency-setting[]

// =============================================================================

// tag::start_position-setting[]
|
[id="input-{input-type}-start_position-setting"]
`start_position`

| (string) Specifies whether this input should read log files from the
`beginning` or from the `end`.

*Default*: `beginning`

* `beginning`: reads from the beginning of the log group.
* `end`: reads only new messages from the current time minus `scan_frequency`
going forward.
+
For example, if `scan_frequency` equals to `30s` and the current timestamp is
`2020-06-24 12:00:00`:

* with `start_position` set to `beginning`:
** first iteration: startTime=0, endTime=2020-06-24 12:00:00
** second iteration: startTime=2020-06-24 12:00:00, endTime=2020-06-24 12:00:30

* with `start_position` set to `end`:
** first iteration: startTime=2020-06-24 11:59:30, endTime=2020-06-24 12:00:00
** second iteration: startTime=2020-06-24 12:00:00, endTime=2020-06-24 12:00:30

//TODO: This example is a bit hard to follow. Needs an edit.

// end::start_position-setting[]

// =============================================================================

|===

[[input-aws-cloudwatch-performance-tuning-settings]]
== Performance tuning settings

Settings that control timeouts and other behaviors that affect performance.

//QUESTION: is performance tuning a good way to describe these settings? I think
//they are not commonly set, so I want to put them in a different category.

[cols="2*<a"]
|===
| Settings | Description

// tag::api_sleep-setting[]
|
[id="input-{input-type}-api_sleep-setting"]
`api_sleep`

| (string) Specifies the duration for {agent} to sleep between AWS
`FilterLogEvents` API calls inside the same collection period. The
`FilterLogEvents` API has a quota of 5 transactions per second
(TPS)/account/Region. Adjust this value when there are multiple {agent}s
collecting logs from the same region and AWS account.

// QUESTION: Remove this setting? Doesn't sound like it's relevant. If we keep
// it, make sure my edit is correct.

*Default:* `200ms`

// end::api_sleep-setting[]

// =============================================================================

// tag::api_timeout-setting[]
|
[id="input-{input-type}-api_timeout-setting"]
`api_timeout`

| (string) The maximum duration an AWS API can take. If the API exceeds the
timeout, it is interrupted. The minimum is 0 seconds.

*Default:* `120s`

// QUESTION: Is this format correct? ^^ Docs didn't say. This description needs
// to be improved. Does it mean an AWS API call? The API call used to retrieve
// events?? It's not clear.

// end::api_timeout-setting[]

// =============================================================================

|===

[[input-aws-cloudwatch-data-parsing-settings]]
== Data parsing, filtering, and manipulation settings

Settings used to parse, filter, and transform data. These settings are
valid for all input types.

[cols="2*<a"]
|===
| Settings | Description

include::input-shared-settings.asciidoc[tag=fields-setting]

include::input-shared-settings.asciidoc[tag=fields-under-root-setting]

include::input-shared-settings.asciidoc[tag=keep_null-setting]

include::input-shared-settings.asciidoc[tag=pipeline-setting]

include::input-shared-settings.asciidoc[tag=processors-setting]

include::input-shared-settings.asciidoc[tag=publisher_pipeline.disable_host-setting]

include::input-shared-settings.asciidoc[tag=tags-setting]

|===

:input-type!:
