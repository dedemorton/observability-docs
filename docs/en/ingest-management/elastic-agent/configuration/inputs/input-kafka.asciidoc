[[kafka-input]]
= Kafka input

++++
<titleabbrev>Kafka</titleabbrev>
++++

Use the `kafka` input to read from topics in a Kafka cluster.

To configure this input, specify a list of one or more `hosts` in the cluster to
bootstrap the connection with, a list of `topics` to track, and a `group_id`
for the connection.

Example configuration:

****
**Reviewers:** These configs are incorrect. Waiting to fix until I know what is
correct.
****

[source,yaml]
----
inputs:
  - type: kafka
    hosts:
      - kafka-broker-1:9092
      - kafka-broker-2:9092
    topics: ["my-topic"]
    group_id: "agent"
----

The following example shows how to use the `kafka` input to ingest data from
Microsoft Azure Event Hubs that have Kafka compatibility enabled:

[source,yaml]
----
inputs:
  - type: kafka
    hosts: ["<your event hub namespace>.servicebus.windows.net:9093"]
    topics: ["<your event hub instance>"]
    group_id: "<your consumer group>"

    username: "$ConnectionString"
    password: "<your connection string>"
    ssl.enabled: true
----

For more details on the mapping between Kafka and Event Hubs configuration
parameters, see the
link:https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-for-kafka-ecosystem-overview[Azure documentation].

[[kafka-input-compatibility]]
== Compatibility

This input works with all Kafka versions in between 0.11 and 2.8.0. Older versions
might work as well, but are not supported.

[[input-kafka-configuration-settings]]
== Configuration settings

The `kafka` input supports the following settings. Most of these settings have
sensible defaults that allow you to run {agent} with minimal configuration.

{also-see-common-input-settings}

[[input-kafka-client_id-setting]]
`client_id` (optional)::
(string) The Kafka client ID.

[[input-kafka-connect_backoff-setting]]
`connect_backoff`::
(duration) How long to wait before trying to reconnect to the Kafka cluster
after a fatal error.
+
Default: `30s`

[[input-kafka-consume_backoff-setting]]
`consume_backoff`::
(string) How long to wait before retrying a failed read.
+
Default: `2s`

[[input-kafka-expand_event_list_from_field-setting]]
`expand_event_list_from_field`::
(string) The name of a field that bundles multiple messages. Use this setting
for filesets that receive multiple messages bundled under a specific field.
For example, in Azure filesets, the events are found under the JSON object
`"records"`.
+
["source","json"]
----
{
"records": [ {event1}, {event2}]
}
----
+
This setting splits the messages under the group value (`"records"`) into
separate events.

[[input-kafka-fetch-setting]]
`fetch`::
(string) Kafka fetch settings:
+
`min`::: The minimum number of bytes to wait for. Default: `1`.
`default`::: The default number of bytes to read per request. Default: `1MB`.
`max`::: The maximum number of bytes to read per request. Default: `0` (no
limit).

[[input-kafka-group_id-setting]]
`group_id`::
(string) The Kafka consumer group id.

[[input-kafka-hosts-setting]]
`hosts`::
(list) A list of Kafka bootstrapping hosts (brokers) for this cluster.

[[input-kafka-initial_offset-setting]]
`initial_offset`::
(string) The initial offset to start reading, either `"oldest"` or `"newest"`.
+
Default: `"oldest"`

[[input-kafka-isolation_level-setting]]
`isolation_level`::
(string) Configures the Kafka group isolation level:
+
--
- `"read_uncommitted"` returns _all_ messages in the message channel.
- `"read_committed"` hides messages that are part of an aborted transaction.
--
+
Default: `"read_uncommitted"`

[[input-kafka-kerberos-setting]]
`kerberos` beta[]:: 

Configuration options for Kerberos authentication.

//See <<configuration-kerberos>> for more information.

//TODO: Add Kerberos settings from
//https://www.elastic.co/guide/en/beats/filebeat/master/configuration-kerberos.html

[[input-kafka-max_wait_time-setting]]
`max_wait_time`::
(duration) How long to wait for the minimum number of input bytes while reading.
+
Default: `250ms`

[[input-kafka-parsers-setting]]
`parsers`::
(list) A list of <<input-kafka-parsers,parsers>> to pass the payload through.
+
Available parsers:
+
* `ndjson`
* `multiline`

[[input-kafka-rebalance-setting]]
`rebalance`::
Kafka rebalance settings:
+
`strategy`::: Either `"range"` or `"roundrobin"`. Default: `"range"`.
`timeout`::: How long to wait for an attempted rebalance. Default: `60s`.
`max_retries`::: How many times to retry if rebalancing fails. Default: `4`.
`retry_backoff`::: How long to wait after an unsuccessful rebalance attempt.
Default: `2s`.

[[input-kafka-sals-mechanism-setting]]
`sasl.mechanism`::
(string) The SASL mechanism to use when connecting to Kafka. It can be one of:
+
--
* `PLAIN` for SASL/PLAIN.
* `SCRAM-SHA-256` for SCRAM-SHA-256.
* `SCRAM-SHA-512` for SCRAM-SHA-512.
--
+
If `sasl.mechanism` is not set, `PLAIN` is used if `username` and `password`
are provided. Otherwise, SASL authentication is disabled.
+
To use `GSSAPI` mechanism to authenticate with Kerberos, you must leave this
field empty, and use the Kerberos settings.

[[input-kafka-topics-setting]]
`topics`::
(list) A list of topics to read from.

[[input-kafka-version-setting]]
`version`::
(string) The version of the Kafka protocol to use.
+
Default: `"1.0.0"`

[[input-kafka-wait_close-setting]]
`wait_close`::
(duration) When shutting down, how long to wait for in-flight messages to be
delivered and acknowledged.
+
Default: `????`
+
****
**Reviewers:** What is the default here ^^?
****

//See <<multiline-examples>> for more information about configuring
//multiline settings.

[[input-kafka-parsers]]
=== Parsers
The following parsers are available under the `parsers` setting:

[id="input-kafka-ndjson-setting"]
`ndjson`::
Parser that decodes the payload as JSON messages.
+
--
Example configuration:

[source,yaml]
----
- ndjson:
  target: ""
  add_error_key: true
  message_key: log
----

**`target`**::: The name of the new JSON object that will contain the parsed key
value pairs. If empty, the new keys are put under root.

**`overwrite_keys`**::: Values from the decoded JSON object overwrite the fields
that {agent} normally adds (type, source, offset, and so on.) in case of
conflicts. Turn off this setting if you want to keep previously added values.

**`expand_keys`**::: If this setting is enabled, {agent} will recursively
de-dot keys in the decoded JSON and expand them into a hierarchical object
structure. For example, `{"a.b.c": 123}` would be expanded into `{"a":{"b":{"c":123}}}`.
This setting should be set when the input is produced by an
https://github.com/elastic/ecs-logging[ECS logger].

**`add_error_key`**::: If this setting is specified, {agent} adds an
"error.message" and "error.type: json" key in case of JSON unmarshalling errors
or when a `message_key` is defined in the configuration but cannot be used.

**`message_key`**::: Optional configuration setting that specifies a JSON key on
which to apply the line filtering and multiline settings. If specified, the key
must be at the top level in the JSON object and the value associated with the
key must be a string; otherwise no filtering or multiline aggregation will
occur.

**`document_id`**::: Optional configuration setting that specifies the JSON key to
set the document id. If configured, the field will be removed from the original
JSON document and stored in `@metadata._id`

**`ignore_decoding_error`**::: Optional configuration setting that specifies if
JSON decoding errors should be logged or not. If set to true, errors will not
be logged. Default: `false`
--

[id="input-{input-type}-multiline-setting"]
`multiline`::
Parser that controls how {agent} deals with log messages that span multiple
lines.

