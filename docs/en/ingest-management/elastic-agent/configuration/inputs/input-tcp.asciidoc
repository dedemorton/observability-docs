:input-type: tcp

[[tcp-input]]
== TCP input

++++
<titleabbrev>TCP</titleabbrev>
++++

Use the `TCP` input to read events over TCP.

Example configuration:

[source,yaml]
----
inputs:
  - type: tcp
    max_message_size: 10MiB
    host: "localhost:9000"
----

The `tcp` input supports the following settings, grouped by category.
Many of these settings have sensible defaults that allow you to run {agent}
with minimal configuration.

<<input-tcp-tcp-settings>>::
Settings for reading over TCP.

<<input-tcp-data-parsing-settings>>::
Settings used to parse, filter, and transform data.

[[input-tcp-tcp-settings]]
=== TCP settings

Settings for reading over TCP.

[cols="2*<a"]
|===
| Settings | Description

include::input-shared-settings.asciidoc[tag=tcp-framing-setting]

include::input-shared-settings.asciidoc[tag=tcp-host-setting]

include::input-shared-settings.asciidoc[tag=tcp-line_delimiter-setting]

include::input-shared-settings.asciidoc[tag=tcp-max_connections-setting]

include::input-shared-settings.asciidoc[tag=tcp-max_message_size-setting]

include::input-shared-settings.asciidoc[tag=ssl-setting]

include::input-shared-settings.asciidoc[tag=tcp-timeout-setting]

|===

[[input-tcp-data-parsing-settings]]
=== Data parsing, filtering, and manipulation settings

Settings used to parse, filter, and transform data. These settings are
valid for all input types.

[cols="2*<a"]
|===
| Settings | Description

include::input-shared-settings.asciidoc[tag=fields-setting]

include::input-shared-settings.asciidoc[tag=fields-under-root-setting]

include::input-shared-settings.asciidoc[tag=keep_null-setting]

include::input-shared-settings.asciidoc[tag=pipeline-setting]

include::input-shared-settings.asciidoc[tag=processors-setting]

include::input-shared-settings.asciidoc[tag=publisher_pipeline.disable_host-setting]

include::input-shared-settings.asciidoc[tag=tags-setting]

|===

:input-type!:
