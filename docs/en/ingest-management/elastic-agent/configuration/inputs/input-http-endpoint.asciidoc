[[input-http_endpoint]]
= HTTP Endpoint input

++++
<titleabbrev>HTTP Endpoint</titleabbrev>
++++

beta[]

****
**Reviewers:** This content is out-of-date. It looks like it's actively being
updated. I won't spend any more time updating it until I know which parts
we want to document.
****

The HTTP Endpoint input initializes a listening HTTP server that collects
incoming HTTP POST requests containing a JSON body. The body must be either an
object or an array of objects. Any other data types will result in an HTTP 400
(Bad Request) response. For arrays, one document is created for each object in
the array.

gzip encoded request bodies are supported if a `Content-Encoding: gzip` header
is sent with the request.

This input can for example be used to receive incoming webhooks from a
third-party application or service.

These are the possible response codes from the server.

[options="header"]
|=========================================================================================================================================================
| HTTP Response Code  | Name                    | Reason
| 200                 | OK                      | Returned on success.
| 400                 | Bad Request             | Returned if JSON body decoding fails.
| 401                 | Unauthorized            | Returned when basic auth, secret header, or HMAC validation fails.
| 405                 | Method Not Allowed      | Returned if methods other than POST are used.
| 406                 | Not Acceptable          | Returned if the POST request does not contain a body.
| 415                 | Unsupported Media Type  | Returned if the Content-Type is not application/json. Or if Content-Encoding is present and is not gzip.
| 500                 | Internal Server Error   | Returned if an I/O error occurs reading the request.
|=========================================================================================================================================================

Example configurations:

****
**Reviewers:** These configs are incorrect. Waiting to fix until I know what is
correct.
****

Basic example:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
----

Custom response example:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
  response_code: 200
  response_body: '{"message": "success"}'
  url: "/"
  prefix: "json"
----

Disable Content-Type checks:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  content_type: ""
  prefix: "json"
----

Basic auth and SSL example:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
  ssl.enabled: true
  ssl.certificate: "/home/user/server.pem"
  ssl.key: "/home/user/server.key"
  ssl.verification_mode: "none"
  ssl.certificate_authority: "/home/user/ca.pem"
  basic_auth: true
  username: someuser
  password: somepassword
----

Authentication or checking that a specific header includes a specific value:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
  secret.header: someheadername
  secret.value: secretheadertoken
----

Validate a HMAC signature from a specific header:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
  hmac.header: "X-Hub-Signature-256"
  hmac.key: "password123"
  hmac.type: "sha256"
  hmac.prefix: "sha256="
----

Preserving original event and including headers in document:

[source,yaml]
----
inputs:
- type: http_endpoint
  enabled: true
  listen_address: 192.168.1.1
  listen_port: 8080
  preserve_original_event: true
  include_headers: ["TestHeader"]
----


[[input-http_endpoint-configuration-settings]]
== Configuration settings

The `http_endpoint` input supports the following settings. Many of these
settings have sensible defaults that allow you to run {agent} with minimal
configuration.

{also-see-common-input-settings}

[[input-http_endpoint-basic_auth-setting]]
`basic_auth`::
(boolean) If `true`, HTTP basic auth is used for each incoming request. You
must also set `username` and `password`.
+
Default: `????`

****
**Reviewers:** What is the default here ^^? Filebeat docs don't say.
****

[[input-http_endpoint-content_type-setting]]
`content_type`::
(string) The Content-Type expected in the incoming POST.
+
By default, the input expects the incoming POST to have a Content-Type of
`application/json`. This ensures the incoming data is valid JSON. If the source
of the request is unable to set the Content-Type to `application/json`, use this
setting to specify a different value, or set it to null.
+
Default: `application/json`

[[input-http_endpoint-hmac-header-setting]]
`hmac.header`::
(string) The name of the header that contains the HMAC signature:
`X-Dropbox-Signature`, `X-Hub-Signature-256`, and so on.

[[input-http_endpoint-hmac-key-setting]]
`hmac.key`::
(string) The secret key used to calculate the HMAC signature. Typically, the
webhook sender provides this value.

[[input-http_endpoint-hmac-prefix-setting]]
`hmac.prefix`::
The prefix for the signature. Certain webhooks prefix the HMAC signature with a
value, for example `sha256=`.

[[input-http_endpoint-hmac-type-setting]]
`hmac.type`::
(string) The hash algorithm to use for the HMAC comparison. At this time the
only valid values are `sha256` or `sha1`.

[[input-http_endpoint-listen_address-setting]]
`listen_address`::
(string) If multiple interfaces are present, use this setting to control which
IP address the listener binds to.
+
Default: `127.0.0.1`

[[input-http_endpoint-listen_port-setting]]
`listen_port`::
(int) Which port the listener binds to.
+
Default: `8000`

[[input-http_endpoint-password-setting]]
`password`::
(string) If `basic_auth` is `true`, specify the password used to authenticate
against the HTTP listener. You must also set `username`.

[[input-http_endpoint-prefix-setting]]
`prefix`::
(string) The prefix the incoming request will be mapped to.

[[input-http_preserve_original_event-setting]]
`preserve_original_event`::
This option copies the raw unmodified body of the incoming request to the
`event.original` field as a string before sending the event to {es}.

[[input-http_endpoint-response_body-setting]]
`response_body`::
(string) The response body returned upon success.

[[input-http_endpoint-response_code-setting]]
`response_code`::
(string) The HTTP response code returned upon success. This value should be in
the 2XX range.

[[input-http_endpoint-secret.header-setting]]
`secret.header`::
(string) The header to check for a specific value specified by `secret.value`.
Some webhooks provide the ability to include a special header and secret to
identify the source.

[[input-http_endpoint-secret.value-setting]]
`secret.value`::
(string) The secret stored in the header name specified by `secret.header`.
Some webhooks provide the ability to include a special header and secret to
identify the source.

[[input-http_endpoint-username-setting]]
`username`::
(string) If `basic_auth` is `true`, specify the username used to authenticate
against the HTTP listener. You must also set `password`.

[[input-http_endpoint-url-setting]]
`url`::
(string) The URL path to accept requests on.
+
Default: `/`
