[discrete]
[[monitor-kubernetes-health-and-performance-metrics]]
== Part 2: Monitor health and performance metrics

[Author: TBD]

TODO: provide a brief intro. We'll need to figure out how much to cover here vs
the monitoring overview. Again lots of good introductory info under
"K8s metrics collection with Metricbeat"
https://www.elastic.co/blog/kubernetes-observability-tutorial-k8s-metrics-collection-and-analysis[here].


[discrete]
=== Metrics you should monitor

TODO: Discuss the metrics that users should monitor: cluster-level
metrics from Kubernetes, pod metrics, metrics about nodes, technology-specific
metrics (like nginx),etc. Explain where the metrics come from (kubelet API,kube-state-metrics,
apiserver, etc) and why to monitor them.


[discrete]
=== Deploy {metricbeat} to collect metrics

TODO: Describe how to configure and deploy Metricbeat as a daemonset. Rough list
of what we need to cover:

* Download the Metricbeat deployment manifest

* Set the connection information for Elasticsearch (also describe how to create
secrets or point to earlier section for reminder)

* Configure metrics collection:

** Collect system metrics.

** Collect Docker metrics.

** Collect Kubernetes pod metrics.

** Collect Kubernetes state metrics

** Collect application-specific metrics (use hint-based autodiscovery).
Examples: NGINX, MySQL

** Collect metrics from Prometheus.

* Add metadata to events. Describe how the events are enriched with
metadata coming from Docker, Kubernetes, host, and the cloud providers

* Deploy Metricbeat as a DaemonSet on Kubernetes

[discrete]
=== View performance and health metrics

TODO: Describe how to use the Metrics app and pre-built dashboards/visualizations.
